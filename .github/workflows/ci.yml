name: Docker & Terraform CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  terraform-ci:

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest

    steps:
    - name: Chekout the Repo
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.2

    - name: Initialize Terraform
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: terraform validate
      id: validate
      if: (success() || failure())
      run: terraform validate

    # TFLint - Terraform Check
    - uses: actions/cache@v2
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v2
      name: Setup TFLint
      with:
        github_token: ${{ secrets.CI_GITHUB_TOKEN }}

# Print TFLint version
    - name: Show version
      run: tflint --version

# Install plugins
    - name: Init TFLint
      run: tflint --init

# Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
    - name: Run TFLint
      run: tflint -f compact --recursive

# Checkov - Prevent cloud misconfigurations and find vulnerabilities during build-time in infrastructure as code
    - name: Run Checkov
      run: |
          docker run -t -v ${{ github.workspace }}:/tf --workdir /tf bridgecrew/checkov --directory /tf --skip-check CKV2_GHA_1
  image-build:

    defaults:
      run:
        shell: bash

    if: ${{ always() }}
    needs: terraform-ci

    runs-on: ubuntu-latest

    steps:
    - name: Chekout the Repo
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Build - Datapusher
      id: build-datapusher
      run: |
        docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}ckan-datapusher:${{ github.sha }} ./ckan-datapusher

    - name: Trivy - Datapusher
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: '${{ secrets.DOCKERHUB_USERNAME }}ckan-datapusher:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results-datapusher.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'