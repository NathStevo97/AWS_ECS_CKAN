name: Docker & Terraform CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  code-quality:

    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest

    steps:
    - name: Chekout the Repo
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.8

    - name: Initialize Terraform
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: terraform validate
      id: validate
      if: (success() || failure())
      run: terraform validate

    # TFLint - Terraform Check
    - uses: actions/cache@v4
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v4
      name: Setup TFLint
      with:
        github_token: ${{ secrets.CI_GITHUB_TOKEN }}

# Print TFLint version
    - name: Show version
      run: tflint --version

# Install plugins
    - name: Init TFLint
      run: tflint --init

# Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
    - name: Run TFLint
      run: tflint -f compact --recursive

  security-scan:

      needs: code-quality

      defaults:
        run:
          shell: bash

      runs-on: ubuntu-latest

      steps:
      - name: Chekout the Repo
        uses: actions/checkout@v4

      # Checkov - Prevent cloud misconfigurations and find vulnerabilities during build-time in infrastructure as code
      - name: Run Checkov
        run: |
            docker run -t -v ${{ github.workspace }}:/tf --workdir /tf bridgecrew/checkov --directory /tf --skip-check CKV2_GHA_1 --quiet
        continue-on-error: true

  ckan-build:

    defaults:
      run:
        shell: bash

    if: ${{ always() }}
    needs: security-scan

    runs-on: ubuntu-latest

    steps:
    - name: Chekout the Repo
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Build - CKAN
      id: build-ckan
      run: |
        docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan:latest ./ckan

    - name: Run Trivy - CKAN
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        trivyignores: '.trivyignore'

    - name: Docker Push - CKAN
      id: push-ckan
      run: |
        docker image push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan:latest

  ckan-datapusher-build:

    defaults:
      run:
        shell: bash

    if: ${{ always() }}
    needs: security-scan

    runs-on: ubuntu-latest

    steps:
    - name: Chekout the Repo
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Build - Datapusher
      id: build-datapusher
      run: |
        docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan-datapusher:latest ./ckan-datapusher

    - name: Run Trivy - Datapusher
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan-datapusher:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        trivyignores: '.trivyignore'

    - name: Docker Push - Datapusher
      id: push-datapusher
      run: |
        docker image push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan-datapusher:latest

  ckan-solr-build:

    defaults:
      run:
        shell: bash

    if: ${{ always() }}
    needs: security-scan

    runs-on: ubuntu-latest

    steps:
    - name: Chekout the Repo
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Build - Solr
      id: build-Solr
      run: |
        docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan-solr:latest ./ckan-solr

    - name: Run Trivy - Solr
      uses: aquasecurity/trivy-action@0.33.1
      with:
        image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan-solr:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        trivyignores: '.trivyignore'

    - name: Docker Push - Solr
      id: push-solr
      run: |
        docker image push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ckan-solr:latest